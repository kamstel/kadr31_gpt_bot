import openai
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
import os

TELEGRAM_TOKEN = os.environ.get("TELEGRAM_TOKEN")
openai.api_key = os.environ.get("OPENAI_API_KEY")
openai.api_base = "https://openrouter.ai/api/v1"

async def chat_with_gpt(text):
    response = openai.ChatCompletion.create(
        model="openai/gpt-4o",
        messages=[
            {"role": "system", "content": "–¢—ã –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–π –≤–∏–¥–µ–æ–º–µ–π–∫–µ—Ä. –ü–æ–º–æ–≥–∞–µ—à—å —Å Reels, –º–æ–Ω—Ç–∞–∂–æ–º, —Å—Ü–µ–Ω–∞—Ä–∏–µ–º, –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ –∏ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ–º. –û—Ç–≤–µ—á–∞–π –∫–∞–∫ –∂–∏–≤–æ–π —á–µ–ª–æ–≤–µ–∫ ‚Äî —Å —é–º–æ—Ä–æ–º, –∫–æ—Ä–æ—Ç–∫–æ, –ø–æ –¥–µ–ª—É –∏ –±–µ–∑ –≤–æ–¥—ã."},
            {"role": "user", "content": text}
        ]
    )
    return response["choices"][0]["message"]["content"]

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    reply = await chat_with_gpt(text)
    await update.message.reply_text(reply)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üé¨ –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–≤–∏–¥–µ–æ–º–µ–π–∫–µ—Ä. –•–æ—á–µ—à—å –∏–¥–µ—é –¥–ª—è Reels, —Å—Ü–µ–Ω–∞—Ä–∏–π –∏–ª–∏ –ø–æ–º–æ—â—å —Å –º–æ–Ω—Ç–∞–∂–æ–º? –ü–∏—à–∏!"
    )

if __name__ == "__main__":
    app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω üöÄ")
    app.run_polling()